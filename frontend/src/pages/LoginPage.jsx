// src/pages/LoginPage.jsx
import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import axios from 'axios'; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º axios
import './Pages.css'; 

const EyeIcon = () => <span role="img" aria-label="–ü–æ–∫–∞–∑–∞—Ç—å –ø–∞—Ä–æ–ª—å" className="password-toggle-icon">üëÅÔ∏è</span>;
const EyeSlashIcon = () => <span role="img" aria-label="–°–∫—Ä—ã—Ç—å –ø–∞—Ä–æ–ª—å" className="password-toggle-icon">üôà</span>;

export default function LoginPage() {
  const [username, setUsername] = useState(''); // –ò–∑–º–µ–Ω–∏–ª 'login' –Ω–∞ 'username' –¥–ª—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è API
  const [password, setPassword] = useState('');
  const [showPassword, setShowPassword] = useState(false);
  const [error, setError] = useState('');
  const [isLoading, setIsLoading] = useState(false); // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –∑–∞–≥—Ä—É–∑–∫–∏
  const navigate = useNavigate();

  const handleLogin = async (e) => { // –î–µ–ª–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π
    e.preventDefault(); // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –æ—Ç–ø—Ä–∞–≤–∫—É —Ñ–æ—Ä–º—ã, –µ—Å–ª–∏ –±—ã —ç—Ç–æ –±—ã–ª–∞ <form>
    setError('');
    setIsLoading(true);

    try {
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º POST-–∑–∞–ø—Ä–æ—Å –Ω–∞ —ç–Ω–¥–ø–æ–∏–Ω—Ç Django –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–æ–≤
      const response = await axios.post('http://localhost:8000/api/login/', {
        username: username, // Django simplejwt –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –æ–∂–∏–¥–∞–µ—Ç 'username'
        password: password,
      });

      // –ï—Å–ª–∏ –∑–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–µ–Ω (—Å—Ç–∞—Ç—É—Å 2xx), axios –Ω–µ –≤—ã–±—Ä–æ—Å–∏—Ç –æ—à–∏–±–∫—É
      if (response.data && response.data.access) {
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–∫–µ–Ω—ã –≤ localStorage
        localStorage.setItem('accessToken', response.data.access);
        if (response.data.refresh) {
          localStorage.setItem('refreshToken', response.data.refresh);
        }

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –¥–ª—è PrivateRoute
        sessionStorage.setItem('auth', 'true');
        
        // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–ª–∏ –¥—Ä—É–≥—É—é –∑–∞—â–∏—â–µ–Ω–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        navigate('/edit'); 
      } else {
        // –≠—Ç–æ–≥–æ —Å–ª—É—á–∞—è –±—ã—Ç—å –Ω–µ –¥–æ–ª–∂–Ω–æ, –µ—Å–ª–∏ API —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∏ simplejwt –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–æ–∫–µ–Ω—ã
        setError('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞. –û—Ç–≤–µ—Ç –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ–∫–µ–Ω–æ–≤.');
      }

    } catch (err) {
      // axios –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ—Ç –æ—à–∏–±–∫—É –¥–ª—è —Å—Ç–∞—Ç—É—Å–æ–≤ 4xx/5xx
      if (err.response && err.response.data) {
        // DRF simplejwt –æ–±—ã—á–Ω–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—à–∏–±–∫—É –≤ –ø–æ–ª–µ "detail" –ø—Ä–∏ –Ω–µ–≤–µ—Ä–Ω—ã—Ö –∫—Ä–µ–¥–∞—Ö
        // –î—Ä—É–≥–∏–µ –æ—à–∏–±–∫–∏ –º–æ–≥—É—Ç –±—ã—Ç—å –≤ –≤–∏–¥–µ —Å–ª–æ–≤–∞—Ä—è {field: [errors]}
        const serverError = err.response.data;
        if (serverError.detail) {
            setError(serverError.detail);
        } else if (typeof serverError === 'object') {
            const messages = Object.values(serverError).flat().join('; ');
            setError(messages || '–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö.');
        } else {
            setError('–ù–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å.');
        }
      } else if (err.request) {
        // –ó–∞–ø—Ä–æ—Å –±—ã–ª —Å–¥–µ–ª–∞–Ω, –Ω–æ –æ—Ç–≤–µ—Ç –Ω–µ –ø–æ–ª—É—á–µ–Ω (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω)
        setError('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏: —Å–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—Ç–∏–ª.');
      } else {
        // –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –∑–∞–ø—Ä–æ—Å–∞
        setError('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞.');
      }
      console.error("Login error:", err.response || err.request || err.message);
    } finally {
      setIsLoading(false); // –í –ª—é–±–æ–º —Å–ª—É—á–∞–µ —É–±–∏—Ä–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
    }
  };

  const toggleShowPassword = () => {
    setShowPassword(!showPassword);
  };

  return (
    <div className="login-page-container">
      <div className="login-form-container">
        <h2 className="login-title">–í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É</h2>
        {/* –û–±–æ—Ä–∞—á–∏–≤–∞–µ–º –≤ <form> –¥–ª—è –ª—É—á—à–µ–π —Å–µ–º–∞–Ω—Ç–∏–∫–∏ –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ Enter */}
        <form onSubmit={handleLogin}> 
            <div className="login-input-group">
            <label htmlFor="username-input" className="login-label">–õ–æ–≥–∏–Ω (Username):</label> {/* –ò–∑–º–µ–Ω–µ–Ω–æ –¥–ª—è —è—Å–Ω–æ—Å—Ç–∏ */}
            <input
                id="username-input"
                type="text"
                value={username}
                onChange={(e) => setUsername(e.target.value)}
                placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –ª–æ–≥–∏–Ω"
                className="login-input"
                required // –î–æ–±–∞–≤–ª–µ–Ω–æ –¥–ª—è –±–∞–∑–æ–≤–æ–π –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –±—Ä–∞—É–∑–µ—Ä–æ–º
            />
            </div>

            <div className="login-password-input-group">
            <label htmlFor="password-input" className="login-label">–ü–∞—Ä–æ–ª—å:</label>
            <input
                id="password-input"
                type={showPassword ? 'text' : 'password'}
                value={password}
                onChange={(e) => setPassword(e.target.value)}
                placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –ø–∞—Ä–æ–ª—å"
                className="login-input login-input-password"
                required // –î–æ–±–∞–≤–ª–µ–Ω–æ
            />
            <button
                type="button" // –í–∞–∂–Ω–æ, —á—Ç–æ–±—ã –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª —Ñ–æ—Ä–º—É —Å–∞–º –ø–æ —Å–µ–±–µ
                onClick={toggleShowPassword}
                className="login-password-toggle-button"
                aria-label={showPassword ? "–°–∫—Ä—ã—Ç—å –ø–∞—Ä–æ–ª—å" : "–ü–æ–∫–∞–∑–∞—Ç—å –ø–∞—Ä–æ–ª—å"}
            >
                {showPassword ? <EyeSlashIcon /> : <EyeIcon />}
            </button>
            </div>

            <button 
                type="submit" // –¢–µ–ø–µ—Ä—å —ç—Ç–æ –∫–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
                className="login-button"
                disabled={isLoading} // –ë–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É –≤–æ –≤—Ä–µ–º—è –∑–∞–ø—Ä–æ—Å–∞
            >
            {isLoading ? '–í—Ö–æ–¥...' : '–í–æ–π—Ç–∏'}
            </button>
            {error && <p className="login-error-message">{error}</p>}
        </form>
      </div>
    </div>
  );
}